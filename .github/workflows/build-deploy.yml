name: build-and-deploy-service
on:
  workflow_call:                       # <── lets other repos call this workflow
    inputs:
      environment:                     # optional, in case you deploy to dev/stg/…
        required: false
        type: string
        default: test

    outputs:                           # hand the deployed commit SHA to caller
      commit:
        description: "commit that was built/deployed"
        value: ${{ jobs.build.outputs.commit }}
  workflow_dispatch:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      commit: ${{ steps.capture-sha.outputs.sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: launchableinc/test-repo2
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python 3.10
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install launchable
      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: "temurin"

      # ①  build your artefact
      - name: Build
        run: |
          make build                       # or mvn, gradle, docker build …

      # ②  record *all* new commits in Launchable for *this* repo
      - name: Record commits in Launchable
        run: launchable record commit --source .
        env:
          LAUNCHABLE_TOKEN: ${{ secrets.LAUNCHABLE_TOKEN }}

      # ③  expose the commit SHA to the caller
      - id: capture-sha
        run: echo "sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

      # ④  deploy the artefact (whatever “deploy” means for you)
      - name: Deploy to ${{ inputs.environment }}
        run: ./scripts/deploy.sh "$GITHUB_SHA" "${{ inputs.environment }}"
